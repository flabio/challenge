version: '3.7'

services:
  db:
    container_name: "challengedb"
    platform: linux/x86_64
    build:
      context: .
      dockerfile: db.Dockerfile
    networks:
      - default
    restart: always
    ports:
      - "3306:3306"
   
    environment:
 
   
      MYSQL_RANDOM_ROOT_PASSWORD: "secret"
      MYSQL_DATABASE: "challengedb"
      MYSQL_USER: "tester"
      MYSQL_PASSWORD: "secret"

      # OR if you want to use "root" as the user, just these two lines
      # MYSQL_ROOT_PASSWORD: ${DATABASE_PASSWORD}
      # MYSQL_DATABASE: ${DATABASE_NAME}

    # we mount a data volume to make sure we don't lose data
    volumes:
      - mysql_data:/var/lib/mysql
    command: --default-authentication-plugin=mysql_native_password
  api:
    container_name:  "challenge_api"
    # we want to use the image which is build from our Dockerfile
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 8080:8081
   
    # we are depending on the mysql backend
    depends_on:
      - db
    # We mount the working dir into the container, handy for development
    # This is what makes the hot reloading work inside of a Docker container
    volumes:
      - .:/app/

networks:
  default:
volumes:
  mysql_data: